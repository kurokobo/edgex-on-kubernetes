apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: edgex-files
  name: edgex-files
spec:
  replicas: 1
  selector:
    matchLabels:
      org.edgexfoundry.service: edgex-files
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        org.edgexfoundry.service: edgex-files
    spec:
      containers:
      - image: edgexfoundry/docker-edgex-volume:1.1.0
        name: edgex-files
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: db-data
        - mountPath: /edgex/logs
          name: log-data
        - mountPath: /consul/config
          name: consul-config
        - mountPath: /consul/data
          name: consul-data
      initContainers:
        - name: init-edgex-files
          image: edgexfoundry/docker-edgex-volume:1.1.0
          command: ["sh", "-c"]
          args:
            - cp -a /data/db/* /tmp/data/db;
              cp -a /edgex/logs/* /tmp/edgex/logs;
              cp -a /consul/config/* /tmp/consul/config;
              cp -a /consul/data/* /tmp/consul/data;
          volumeMounts:
            - mountPath: /tmp/data/db
              name: db-data
            - mountPath: /tmp/edgex/logs
              name: log-data
            - mountPath: /tmp/consul/config
              name: consul-config
            - mountPath: /tmp/consul/data
              name: consul-data
      hostname: edgex-files
      restartPolicy: Always
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-data
      - name: log-data
        persistentVolumeClaim:
          claimName: log-data
      - name: consul-config
        persistentVolumeClaim:
          claimName: consul-config
      - name: consul-data
        persistentVolumeClaim:
          claimName: consul-data
status: {}
